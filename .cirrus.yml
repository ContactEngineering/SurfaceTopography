# this build script is adapted from matscipy, which is adapted from scipy

build_and_store_wheels: &BUILD_AND_STORE_WHEELS
  install_cibuildwheel_script:
    - python -m pip install cibuildwheel==2.11.4
  cibuildwheel_script:
    - echo "Building wheels for SurfaceTopography version $(python discover_version.py)"
    - cibuildwheel
    - tools/wheels/release-wheels.sh
  env:
    TWINE_USERNAME: __token__
    TWINE_PASSWORD: ENCRYPTED[!b35e55cd7ec79c1b206ce2f552877085f093b19e147e09093fd2fc30c87963d2bdb74430701e74bf563b58928d0721f5!]
  wheels_artifacts:
    path: "wheelhouse/*"


######################################################################
# Build linux_aarch64 natively
######################################################################

# There is currently no muSpectre wheel for Linux aarch64, so it does not
# really make sense to build the aarch64 wheel here.
#cirrus_wheels_linux_aarch64_task:
#  compute_engine_instance:
#    image_project: cirrus-images
#    image: family/docker-builder-arm64
#    architecture: arm64
#    platform: linux
#    cpu: 4
#    memory: 8G
#  matrix:
#    - env:
#        CIBW_BUILD: cp38-* cp39-*
#    - env:
#        CIBW_BUILD: cp310-* cp311-*
#  build_script: |
#    apt install -y python3-venv python-is-python3
#    which python
#    echo $CIRRUS_CHANGE_MESSAGE
#    # needed for discover_version.py
#    git fetch --all
#    # needed for submodules
#    git submodule update --init
#  <<: *BUILD_AND_STORE_WHEELS


######################################################################
# Build macosx_arm64 natively
######################################################################

cirrus_wheels_macos_arm64_task:
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-xcode:13.3.1
  matrix:
    - env:
        CIBW_BUILD: cp38-*
        CIBW_BEFORE_ALL: bash tools/wheels/cibw_before_all_cp38_macosx_arm64.sh	
    - env:
        CIBW_BUILD: cp39-* cp310-* cp311-*
  env:
    PATH: /opt/homebrew/opt/python@3.10/bin:$PATH
    CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=12.0 _PYTHON_HOST_PLATFORM="macosx-12.0-arm64"
    PKG_CONFIG_PATH: /opt/arm64-builds/lib/pkgconfig
    # assumes that the cmake config is in /usr/local/lib/cmake
    CMAKE_PREFIX_PATH: /opt/arm64-builds/
    REPAIR_PATH: /usr/local/gfortran/lib:/opt/arm64-builds/lib
    CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
      DYLD_LIBRARY_PATH=/usr/local/gfortran/lib:/opt/arm64-builds/lib delocate-listdeps {wheel} &&
      DYLD_LIBRARY_PATH=/usr/local/gfortran/lib:/opt/arm64-builds/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}

  install_pre_requirements_script:
    - brew install python@3.10
    - ln -s python3 /opt/homebrew/opt/python@3.10/bin/python

  build_script:
    - which python
    # needed for discover_version.py
    - git fetch --all
    # needed for submodules
    - git submodule update --init
    - uname -m
    - python -c "import platform;print(platform.python_version());print(platform.system());print(platform.machine())"
    - clang --version
  <<: *BUILD_AND_STORE_WHEELS


