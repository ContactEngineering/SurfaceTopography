name: Run tests

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        mpi: ['yes', 'no']

    steps:
    - uses: actions/checkout@v1

    - name: install_python
      run: |
        sudo apt-get update -qy
        sudo apt-get install -y python3-dev python3-pip libfftw3-dev libopenblas-dev
        if [ "${{ matrix.mpi }}" == "yes" ]; then sudo apt-get install openmpi-bin libopenmpi-dev libfftw3-mpi-dev libhdf5-mpi-dev libpnetcdf-dev libnetcdf-pnetcdf-dev; fi
        sudo pip3 install -r requirements.txt --no-binary setuptools_scm
        if [ "${{ matrix.mpi }}" == "yes" ]; then NETCDF4_DIR=/usr/lib/x86_64-linux-gnu/netcdf/pnetcdf CC=mpicc python -m pip install --force-reinstall -v --no-binary netCDF4 netCDF4==${NETCDF4_PYTHON_VERSION}; fi
        python .check_netcdf_capabilities.py $WITH_MPI
    - name: build_c
      run: |
        python setup.py sdist
        python -m pip install dist/*.tar.gz

    - name: pytest
      run: |
        if [ "${{ matrix.mpi }}" == "yes" ]; then python run-tests.py --no-build --verbose --full-trace; else python -m pytest --flake8 --verbose --full-trace -s; fi
